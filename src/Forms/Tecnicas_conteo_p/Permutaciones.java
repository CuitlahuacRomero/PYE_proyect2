/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms.Tecnicas_conteo_p;

import Forms.Tecnicas_conteo.Permutaciones.Aditivo;
import Forms.Tecnicas_conteo.Permutaciones.Circular;
import Forms.Tecnicas_conteo.Permutaciones.Multiplicativo;
import Forms.Tecnicas_conteo.Permutaciones.Notacion_factorial;
import Forms.Tecnicas_conteo.Permutaciones.Objetos;
import Forms.Tecnicas_conteo.Permutaciones.Repeticion;
import Forms.Tecnicas_conteo.Permutaciones.Sin_repeticion;

/**
 *
 * @author cuitlahuac
 */
public class Permutaciones extends javax.swing.JFrame {

    /**
     * Creates new form Permutaciones
     */
    public Permutaciones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_circular = new javax.swing.JButton();
        b_notacion = new javax.swing.JButton();
        b_repeticion = new javax.swing.JButton();
        b_sinrep = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        b_regresar = new javax.swing.JButton();
        b_multiplicativo = new javax.swing.JButton();
        b_aditivo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        b_circular.setText("Circular");
        b_circular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_circularActionPerformed(evt);
            }
        });

        b_notacion.setText("Notacion factorial");
        b_notacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_notacionActionPerformed(evt);
            }
        });

        b_repeticion.setText("Repeticion de n elementos tomados de r en r");
        b_repeticion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_repeticionActionPerformed(evt);
            }
        });

        b_sinrep.setText("Sin repeticion de elementos tomados de r en r");
        b_sinrep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_sinrepActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipos de permutaciones");

        b_regresar.setText("Regresar");
        b_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_regresarActionPerformed(evt);
            }
        });

        b_multiplicativo.setText("Principio multiplicativo");
        b_multiplicativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_multiplicativoActionPerformed(evt);
            }
        });

        b_aditivo.setText("Principio aditivo");
        b_aditivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_aditivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_sinrep)
                            .addComponent(b_repeticion)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(b_aditivo))
                                    .addComponent(b_multiplicativo)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(b_regresar)
                                .addGap(13, 13, 13))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_notacion)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(b_circular)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(b_circular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_notacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_repeticion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_sinrep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_multiplicativo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_aditivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_regresar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void b_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_regresarActionPerformed
        this.setVisible(false);
        Tecnicas_conteo tecnicas = new Tecnicas_conteo();
        tecnicas.setVisible(true);
    }//GEN-LAST:event_b_regresarActionPerformed

    private void b_circularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_circularActionPerformed
        this.setVisible(false);
        Circular circular = new Circular();
        circular.setVisible(true);
    }//GEN-LAST:event_b_circularActionPerformed

    private void b_notacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_notacionActionPerformed
        this.setVisible(false);
        Notacion_factorial notacion = new Notacion_factorial();
        notacion.setVisible(true);
    }//GEN-LAST:event_b_notacionActionPerformed

    private void b_repeticionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_repeticionActionPerformed
        this.setVisible(false);
        Repeticion repeticion = new Repeticion();
        repeticion.setVisible(true);
    }//GEN-LAST:event_b_repeticionActionPerformed

    private void b_sinrepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_sinrepActionPerformed
        this.setVisible(false);
        Sin_repeticion sin = new Sin_repeticion();
        sin.setVisible(true);
    }//GEN-LAST:event_b_sinrepActionPerformed

    private void b_multiplicativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_multiplicativoActionPerformed
        this.setVisible(false);
        Multiplicativo multiplicativo = new Multiplicativo();
        multiplicativo.setVisible(true);
    }//GEN-LAST:event_b_multiplicativoActionPerformed

    private void b_aditivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_aditivoActionPerformed
        this.setVisible(false);
        Aditivo aditivo = new Aditivo();
        aditivo.setVisible(true);
    }//GEN-LAST:event_b_aditivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Permutaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Permutaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Permutaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Permutaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Permutaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_aditivo;
    private javax.swing.JButton b_circular;
    private javax.swing.JButton b_multiplicativo;
    private javax.swing.JButton b_notacion;
    private javax.swing.JButton b_regresar;
    private javax.swing.JButton b_repeticion;
    private javax.swing.JButton b_sinrep;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
