/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms.Estadistica_descriptiva_p;

/**
 *
 * @author cuitlahuac
 */
public class Frecuencias_2 extends javax.swing.JFrame {

    /**
     * Creates new form Frecuencias
     */
    public Frecuencias_2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txt_elementos = new javax.swing.JTextField();
        list1 = new java.awt.List();
        b_limpiar = new javax.swing.JButton();
        b_regresar = new javax.swing.JButton();
        b_calcular = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null,  new Double(1.0), null, null, null},
                {null, null, null, null,  new Double(2.0), null, null, null},
                {null, null, null, null,  new Double(3.0), null, null, null},
                {null, null, null, null,  new Double(4.0), null, null, null},
                {null, null, null, null,  new Double(5.0), null, null, null},
                {null, null, null, null,  new Double(6.0), null, null, null},
                {null, null, null, null,  new Double(7.0), null, null, null},
                {null, null, null, null,  new Double(8.0), null, null, null},
                {null, null, null, null,  new Double(9.0), null, null, null},
                {null, null, null, null,  new Double(10.0), null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Clase", "Marca de clase", "Lim inferior", "Lim superior", "fa", "FA", "fr", "Ojiva"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table1);

        jLabel2.setText("Ingresar los valores separados por una coma \",\" y datos enteros.");

        b_limpiar.setText("Limpiar");
        b_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_limpiarActionPerformed(evt);
            }
        });

        b_regresar.setText("Regresar");
        b_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_regresarActionPerformed(evt);
            }
        });

        b_calcular.setText("Calcular");
        b_calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_calcularActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Obsevaciones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(txt_elementos, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(b_calcular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_limpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_regresar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_elementos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_regresar)
                    .addComponent(b_limpiar)
                    .addComponent(b_calcular))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private String[] parts;
    private String dato;
    private int[] array_enteros;
    double frecuencia_acumulada;

    Tendencia_central metodos = new Tendencia_central();

    public double getFrecuencia_acumulada() {
        return frecuencia_acumulada;
    }

    public void setFrecuencia_acumulada(double frecuencia_acumulada) {
        this.frecuencia_acumulada = frecuencia_acumulada;
    }

    public int[] getArray_enteros() {
        return array_enteros;
    }

    public void setArray_enteros(int[] array_enteros) {
        this.array_enteros = array_enteros;
    }

    public int[] obtener_datos() {
        //Obtener datos del textbox en arreglo
        //dato = (txt_elementos.getText());
        dato = "1625,1630,1640,1645,1660,1670,1685,1690,1705,1710,"
                + "1725,1760,1770,1805,1820,1830,1830,1840";
        //Guardar arreglo en list
        list1.removeAll();
        parts = dato.split(",");
        for (String part : parts) {
            list1.add(part);
        }
        //Creacion de arreglo tipo int
        array_enteros = new int[parts.length];
        //Pasar de String a int
        for (int i = 0; i < array_enteros.length; i++) {
            array_enteros[i] = Integer.parseInt(parts[i]);
        }
        setArray_enteros(array_enteros);
        return array_enteros;
    }

    public void llenar_clase() {
        //Llenar el campo de clase
        table1.removeAll();
        for (int i = 0; i <= array_enteros.length; i++) {
            String clase = "Clase: ";
            table1.setValueAt(clase + (i + 1), i, 0);
        }
    }

    public int[] acomodo_mayor_menor(int[] array_enteros) {
        //Acomodo de menor a mayor
        int temporal = 0;

        for (int i = 0; i < array_enteros.length; i++) {
            for (int j = 1; j < (array_enteros.length - i); j++) {
                if (array_enteros[j - 1] > array_enteros[j]) {
                    temporal = array_enteros[j - 1];
                    array_enteros[j - 1] = array_enteros[j];
                    array_enteros[j] = temporal;
                }
            }
        }
        setArray_enteros(array_enteros);
        return array_enteros;
    }

    public void llenar_limites() {
        double a = 4.4;
        double lim_inferior, lim_superior;
        //Calculo de limite inferior
        lim_inferior = array_enteros[0] - 0.5 * a;
        table1.setValueAt(lim_inferior, 0, 2);
        //Calculo de limite superior
        lim_superior = lim_inferior + a;
        table1.setValueAt(lim_superior, 0, 3);
        //Guardar los valores restantes
        for (int i = 0; i < array_enteros.length; i++) {
            lim_inferior = (double) table1.getValueAt(i, 3);
            table1.setValueAt(lim_superior, i + 1, 2);
            lim_superior = (double) table1.getValueAt(i + 1, 2);
            lim_superior = lim_superior + a;
            table1.setValueAt(lim_superior, i + 1, 3);
        }
    }

    public void llenar_marca_de_clase() {
        double marca_clase, lim_inferior, lim_superior;
        for (int i = 0; i <= array_enteros.length; i++) {
            lim_inferior = (double) table1.getValueAt(i, 2);
            lim_superior = (double) table1.getValueAt(i, 3);
            marca_clase = (lim_superior + lim_inferior) / 2;
            table1.setValueAt(marca_clase, i, 1);
        }
    }

    public void llenar_frecuencia_absoluta() {

    }

    public void llenar_frecuencia_acumulada() {
        double frecuencia_absoluta, frecuencia_acumulada = 0;
        for (int i = 0; i <= array_enteros.length; i++) {
            frecuencia_absoluta = (double) table1.getValueAt(i, 4);
            frecuencia_acumulada = frecuencia_absoluta + frecuencia_acumulada;
            table1.setValueAt(frecuencia_acumulada, i, 5);
        }
        setFrecuencia_acumulada(frecuencia_acumulada);
    }

    public void llenar_frecuencia_relativa() {
        double frecuencia_absoluta, frecuencia_relativa, frecuencia_acumulada;
        frecuencia_acumulada = getFrecuencia_acumulada();
        for (int i = 0; i <= array_enteros.length; i++) {
            frecuencia_absoluta = (double) table1.getValueAt(i, 4);
            frecuencia_relativa = frecuencia_absoluta / frecuencia_acumulada;
            table1.setValueAt(frecuencia_relativa, i, 6);
        }
    }

    public void llenar_ojiva() {
        double frecuencia_relativa, ojiva = 0;
        for (int i = 0; i <= array_enteros.length; i++) {
            frecuencia_relativa = (double) table1.getValueAt(i, 6);
            ojiva = frecuencia_relativa + ojiva;
            table1.setValueAt(ojiva, i, 7);
        }
    }

    private void b_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_limpiarActionPerformed
        txt_elementos.setText("");
        list1.removeAll();
        table1.removeAll();
        txt_elementos.requestFocus();
    }//GEN-LAST:event_b_limpiarActionPerformed

    private void b_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_regresarActionPerformed
        this.setVisible(false);
        Estadistica_descriptiva estadistica = new Estadistica_descriptiva();
        estadistica.setVisible(true);
    }//GEN-LAST:event_b_regresarActionPerformed

    private void b_calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_calcularActionPerformed
        obtener_datos();
        llenar_clase();
        acomodo_mayor_menor(array_enteros);
        llenar_limites();
        llenar_marca_de_clase();
        llenar_frecuencia_acumulada();
        llenar_frecuencia_relativa();
        llenar_ojiva();
    }//GEN-LAST:event_b_calcularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frecuencias_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frecuencias_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frecuencias_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frecuencias_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frecuencias_2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_calcular;
    private javax.swing.JButton b_limpiar;
    private javax.swing.JButton b_regresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.List list1;
    private javax.swing.JTable table1;
    private javax.swing.JTextField txt_elementos;
    // End of variables declaration//GEN-END:variables
}
