/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms.Estadistica_descriptiva_p;

/**
 *
 * @author cuitlahuac
 */
public class Dispersion extends javax.swing.JFrame {

    /**
     * Creates new form Dispersion
     */
    public Dispersion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_limpiar = new javax.swing.JButton();
        b_rango = new javax.swing.JButton();
        b_varianza = new javax.swing.JButton();
        b_desviacion = new javax.swing.JButton();
        b_regresar = new javax.swing.JButton();
        txt_elementos = new javax.swing.JTextField();
        list1 = new java.awt.List();
        l_resultado = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        b_coeficiente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        b_limpiar.setText("Limpiar");
        b_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_limpiarActionPerformed(evt);
            }
        });

        b_rango.setText("Rango");
        b_rango.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_rangoActionPerformed(evt);
            }
        });

        b_varianza.setText("Varianza");
        b_varianza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_varianzaActionPerformed(evt);
            }
        });

        b_desviacion.setText("Desviacion estandar");
        b_desviacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_desviacionActionPerformed(evt);
            }
        });

        b_regresar.setText("Regresar");
        b_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_regresarActionPerformed(evt);
            }
        });

        jLabel1.setText("Resultado");

        jLabel2.setText("Ingresar los valores separados por un espacio");

        b_coeficiente.setText("Coeficiente de variacion");
        b_coeficiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_coeficienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(b_limpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(b_regresar)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b_desviacion)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(b_rango, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(b_varianza, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(l_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(b_coeficiente))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txt_elementos, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txt_elementos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(l_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(b_rango)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_varianza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_desviacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_coeficiente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_regresar)
                            .addComponent(b_limpiar)))
                    .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void b_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_limpiarActionPerformed
        txt_elementos.setText("");
        list1.removeAll();
        l_resultado.setText("");
        txt_elementos.requestFocus();
    }//GEN-LAST:event_b_limpiarActionPerformed

    private void b_rangoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_rangoActionPerformed
        l_resultado.setText("");
        //Obtener datos del textbox en arreglo
        String dato = (txt_elementos.getText());
        //Guardar arreglo en list
        list1.removeAll();
        String[] parts = dato.split(" ");
        for (String part : parts) {
            list1.add(part);
        }
        //Creacion de arreglo tipo int
        int[] array_enteros = new int[parts.length]; 
        //Pasar de String a int
        for (int i = 0; i < array_enteros.length; i++){
            array_enteros[i] = Integer.parseInt(parts[i]);
        }
        //Acomodo de menor a mayor
        int temporal = 0;

        for (int i = 0; i < array_enteros.length; i++) {
            for (int j = 1; j < (array_enteros.length - i); j++) {
                if (array_enteros[j - 1] > array_enteros[j]) {
                    temporal = array_enteros[j - 1];
                    array_enteros[j - 1] = array_enteros[j];
                    array_enteros[j] = temporal;
                }
            }
        }
        //Calculo de rango
        int rango = array_enteros [ array_enteros.length - 1 ] - array_enteros [ 0 ];
        l_resultado.setText(String.valueOf(rango));
    }//GEN-LAST:event_b_rangoActionPerformed

    private void b_varianzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_varianzaActionPerformed
        l_resultado.setText("");
        list1.removeAll();
        //Obtener datos del textbox en arreglo
        String dato = (txt_elementos.getText());
        //Guardar arreglo en list
        list1.removeAll();
        String[] parts = dato.split(" ");
        for (String part : parts) {
            list1.add(part);
        }
        //Creacion de arreglo tipo int
        int[] array_enteros = new int[parts.length];
        //Pasar de String a int
        for (int i = 0; i < array_enteros.length; i++) {
            array_enteros[i] = Integer.parseInt(parts[i]);
        }
        float x=0,y=0,z=0,w=0;
        for (int j =0; j< array_enteros.length;j++){
            x = x + array_enteros[j];
        }
        y=x/array_enteros.length;
        for (int k=0; k< array_enteros.length;k++){
            z +=(float) Math.pow((array_enteros[k]-y),2);
        }
        w = z/array_enteros.length;
        l_resultado.setText(String.valueOf(w));

    }//GEN-LAST:event_b_varianzaActionPerformed

    private void b_desviacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_desviacionActionPerformed
    l_resultado.setText("");
    list1.removeAll();
    //Obtener datos del textbox en arreglo
    String dato = (txt_elementos.getText());
    //Guardar arreglo en list
    list1.removeAll();
    String[] parts = dato.split(" ");
    for (String part : parts) {
        list1.add(part);
    }
    //Creacion de arreglo tipo int
    int[] array_enteros = new int[parts.length]; 
    //Pasar de String a int
    for (int i = 0; i < array_enteros.length; i++){
        array_enteros[i] = Integer.parseInt(parts[i]);
    }
    //Calular promemdio
    double prom = 0.0;
    for ( int i = 0; i < array_enteros.length; i++ )
      prom += array_enteros[i];

    prom = prom / ( double ) array_enteros.length;  
    //Calculo de la desviacion
    double sum = 0, desviacion; 
    int i, n = array_enteros.length;
    for ( i = 0; i < n; i++ ) 
      sum += Math.pow ( array_enteros [ i ] - prom, 2 );

    desviacion =  Math.sqrt ( sum / ( double ) n );
    l_resultado.setText(String.valueOf(desviacion));
    }//GEN-LAST:event_b_desviacionActionPerformed

    private void b_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_regresarActionPerformed
        this.setVisible(false);
        Estadistica_descriptiva estadistica = new Estadistica_descriptiva();
        estadistica.setVisible(true);
    }//GEN-LAST:event_b_regresarActionPerformed

    private void b_coeficienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_coeficienteActionPerformed
        // TODO add your handling code here:
        l_resultado.setText("");
        list1.removeAll();
        //Obtener datos del textbox en arreglo
        String dato = (txt_elementos.getText());
        //Guardar arreglo en list
        list1.removeAll();
        String[] parts = dato.split(" ");
        for (String part : parts) {
            list1.add(part);
        }
        //Creacion de arreglo tipo int
        int[] array_enteros = new int[parts.length];
        //Pasar de String a int
        for (int i = 0; i < array_enteros.length; i++) {
            array_enteros[i] = Integer.parseInt(parts[i]);
        }
        float x=0,y=0,z=0,w=0;
        for (int j =0; j< array_enteros.length;j++){
            x = x + array_enteros[j];
        }
        y=x/array_enteros.length;
        for (int k=0; k< array_enteros.length;k++){
            z +=(float) Math.pow((array_enteros[k]-y),2);
        }
        z= (float) Math.sqrt(z);
        w = (z/array_enteros.length)/y;
        l_resultado.setText(String.valueOf(w));

    
    }//GEN-LAST:event_b_coeficienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dispersion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dispersion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dispersion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dispersion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dispersion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_coeficiente;
    private javax.swing.JButton b_desviacion;
    private javax.swing.JButton b_limpiar;
    private javax.swing.JButton b_rango;
    private javax.swing.JButton b_regresar;
    private javax.swing.JButton b_varianza;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel l_resultado;
    private java.awt.List list1;
    private javax.swing.JTextField txt_elementos;
    // End of variables declaration//GEN-END:variables
}
